name: Build and Deploy to OCI

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to OCIR
        run: echo "${{ secrets.OCI_AUTH_TOKEN }}" | docker login ${{ vars.OCI_REGION_CODE }} -u "${{ vars.OCI_NAMESPACE }}/${{ secrets.OCI_USERNAME }}" --password-stdin

      - name: Build and Push (multi-arch + cache)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ vars.OCI_REGION_CODE }}/${{ vars.OCI_NAMESPACE }}/${{ vars.OCI_REPO }}:${{ github.ref_name }}
            ${{ vars.OCI_REGION_CODE }}/${{ vars.OCI_NAMESPACE }}/${{ vars.OCI_REPO }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

  restart-ci:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Install OCI CLI
        run: |
          curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh | bash -s -- --accept-all-defaults
          echo "${HOME}/bin" >> $GITHUB_PATH

      - name: Configure OCI CLI
        run: |
          mkdir -p ~/.oci
          echo "[DEFAULT]" > ~/.oci/config
          echo "user=${{ secrets.OCI_USER_OCID }}" >> ~/.oci/config
          echo "fingerprint=${{ secrets.OCI_FINGERPRINT }}" >> ~/.oci/config
          echo "key_file=~/.oci/oci_api_key.pem" >> ~/.oci/config
          echo "tenancy=${{ secrets.OCI_TENANCY_OCID }}" >> ~/.oci/config
          echo "region=${{ secrets.OCI_REGION }}" >> ~/.oci/config
          echo "${{ secrets.OCI_KEY_BASE64 }}" | base64 -d > ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/oci_api_key.pem

      - name: Restart Container Instance
        run: |
          oci container-instances container-instance stop \
            --container-instance-id ${{ secrets.OCI_CONTAINER_ID }} \
            --force
          echo "Waiting 20s before restart..."
          sleep 20
          oci container-instances container-instance action-start \
            --container-instance-id ${{ secrets.OCI_CONTAINER_ID }}
